{"version":3,"sources":["Components/Header.jsx","Components/Keys.jsx","Components/Menu.jsx","Components/Footer.jsx","Components/Main.jsx","Components/data.js","App.js","serviceWorker.js","index.js"],"names":["Header","Keys","data","handleClick","handleTransition","keys","map","item","dataKey","description","key","audio","className","data-key","id","onClick","onTransitionEnd","src","Menu","handleTurnOffApp","turnOnApp","handleRange","valueRange","handleClickUp","button","type","value","htmlFor","name","min","max","step","onChange","onPointerUp","Footer","href","target","rel","Main","handleKeyPress","onKeyDown","tabIndex","App","useState","valueDisplay","setValueDisplay","onApp","setOnApp","setValueRange","useEffect","document","getElementById","innerText","e","querySelector","parentNode","currentTime","volume","play","classList","add","propertyName","remove","Math","round","keyCode","console","log","firstChild","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.764e0802.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>Drum Machine</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\n\r\nconst Keys = ({data,handleClick,handleTransition}) => {\r\n    const keys = data.map( item => {\r\n        const {dataKey, description,key , audio} = item;\r\n       \r\n        return (\r\n            <div className = \"drum-pad\" key = {dataKey} data-key = {dataKey} id = {description} onClick = {handleClick} onTransitionEnd = {handleTransition}>\r\n                <p>{key}</p>\r\n                <audio  id={key} className=\"clip\" src={audio} data-key={dataKey} />\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"container-keys\">\r\n            {keys}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Keys;","import React from \"react\";\r\n\r\nconst Menu = ({handleTurnOffApp,turnOnApp, handleRange ,valueRange ,handleClickUp}) => {\r\n    const button = turnOnApp === true ?  \r\n                                <input type=\"button\" value=\"Power\" className=\"power-btn\" onClick = {handleTurnOffApp }/> :\r\n                                <input type=\"button\" value=\"Power\" className=\"power-btn active\" onClick = {handleTurnOffApp }/>;                        \r\n        \r\n    return (\r\n        <div className=\"container-menu\">\r\n            <div className=\"btn\">\r\n                {button}\r\n            </div>\r\n            <div id=\"display\">Play a sound...</div>\r\n            <div className=\"range\">\r\n                <label htmlFor=\"volume\">Volume</label>\r\n                <input type=\"range\" name=\"volume\" id = 'volume'  className=\"slider\" min=\"0\" max=\"1\" step=\".05\"  onChange = {handleRange} value = {valueRange} onPointerUp = {handleClickUp}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Coded by <a href=\"https://github.com/dg0397\" target = \"_blank\" rel=\"noopener noreferrer\">DG0397</a></p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Keys from \"./Keys\";\r\nimport Menu from \"./Menu\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst Main = ({data , handleClick , handleTransition, turnOnApp , handleTurnOffApp ,handleRange , valueRange , handleClickUp ,handleKeyPress}) => {\r\n    return (\r\n        <div id=\"drum-machine\" onKeyDown = {handleKeyPress} tabIndex=\"1\">  \r\n        <Header />\r\n        <Keys \r\n        data = {data} \r\n        handleClick = {handleClick}  \r\n        handleTransition = {handleTransition}/>\r\n        <Menu \r\n        turnOnApp = {turnOnApp} \r\n        handleTurnOffApp = {handleTurnOffApp } \r\n        handleRange = {handleRange} \r\n        valueRange = {valueRange} \r\n        handleClickUp = {handleClickUp}/>\r\n        <Footer/>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default Main;","const data = [\r\n    {key : 'Q' , dataKey : 81 , description : 'Heater-1', audio : 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'},\r\n    {key : 'W' , dataKey : 87 , description : 'Heater-2', audio : 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'},\r\n    {key : 'E' , dataKey : 69 , description : 'Heater-3', audio : 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'},\r\n    {key : 'A' , dataKey : 65 , description : 'Heater-4', audio : 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'},\r\n    {key : 'S' , dataKey : 83 , description : 'Clap', audio : 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'},\r\n    {key : 'D' , dataKey : 68 , description : 'Open-HH', audio : 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'},\r\n    {key : 'Z' , dataKey : 90 , description : \"Kick-n'-Hat\", audio : 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'},\r\n    {key : 'X' , dataKey : 88 , description : 'Kick', audio : 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'},\r\n    {key : 'C' , dataKey : 67 , description : 'Closed-HH', audio : 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'}\r\n]\r\n\r\nexport default data;","import React, {useState , useEffect} from 'react';\nimport \"./Styles/styles.scss\"\n\nimport Main from './Components/Main'\nimport data from \"./Components/data\";\n\n\nfunction App(){\n  const [valueDisplay, setValueDisplay] = useState('Play a sound');\n  const [onApp, setOnApp] = useState(true);\n  const [valueRange , setValueRange] = useState(0.5);\n\n  useEffect( () => {\n    const display = document.getElementById('display');\n    display.innerText = onApp === false ? '' : valueDisplay;\n  },[valueDisplay, onApp])\n\n\n  const handleClick = e => {\n    if(!onApp)return;\n\n    const id = e.target.innerText\n    const audio = document.querySelector(`audio#${id}`);\n    const description = e.target.parentNode.id;\n        \n    audio.currentTime = 0;\n    audio.volume = valueRange;\n    audio.play();\n\n\n    e.target.classList.add('active-key');\n\n    setValueDisplay(description);\n    \n    \n  }\n  const handleKey = (e) => {\n    if(!onApp)return;\n\n    const audio = document.querySelector(`audio[data-key=\"${e.keyCode}\"]`);\n\n    if(!audio) return;\n\n    const key = document.querySelector(`div[data-key=\"${e.keyCode}\"]`);\n    const description = key.id;\n\n\n    console.log(valueRange);\n    audio.currentTime = 0;\n    audio.volume = valueRange;\n    audio.play();\n\n    key.firstChild.classList.add('active-key');\n\n    setValueDisplay(description);\n\n  }\n\n  const handleTransition = (e) => {\n    if(e.propertyName !== 'transform') return;\n    e.target.classList.remove('active-key')\n  }\n\n  const turnOffApp = (e) => {\n    \n    setOnApp(!onApp);\n    setValueDisplay('Play a sound...');\n    setValueRange(0.5);\n\n  }\n\n  const handleRange = (e) => {\n    setValueRange(e.target.value);\n    setValueDisplay(`Volume: ${Math.round(e.target.value * 100)}%`)\n  }\n\n  const handleClickUp = (e) => {\n    setValueDisplay('Play a sound...');\n  } \n\n  return (\n    <Main \n    data = {data}\n    handleClick = {handleClick}\n    handleTransition = {handleTransition}\n    handleTurnOffApp = {turnOffApp}\n    turnOnApp = {onApp}\n    handleRange = {handleRange}\n    valueRange = {valueRange}\n    handleClickUp = {handleClickUp}\n    handleKeyPress = {handleKey}\n     />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}